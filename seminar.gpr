with "aws";

project Seminar is

   type Build_Kind1 is
      ("default", "relocatable");
   type Build_Kind is
      ("static", "relocatable", "static-pic");
   for Object_Dir use "obj";
   for Exec_Dir use ".";
   for Main use ("seminar-main.adb");
   XMLADA_BUILD : Build_Kind := external ("XMLADA_BUILD");
   AWS_BUILD : Build_Kind1 := external ("AWS_BUILD");

   package Builder is
      for Executable ("seminar-main.adb") use "seminar";
   end Builder;

   case XMLADA_BUILD is

      when "static" =>

         case AWS_BUILD is

            when "default" =>
               for Source_Dirs use ("src/**");

            when "relocatable" =>
               for Source_Dirs use ("src");
         end case;

      when "relocatable" =>
         for Source_Dirs use ("src");

      when "static-pic" =>
         for Source_Dirs use ("src");
   end case;

   package Compiler is

      case XMLADA_BUILD is

         when "static" =>

            case AWS_BUILD is

               when "default" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;

         when "relocatable" =>

            case AWS_BUILD is

               when "default" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;

         when "static-pic" =>

            case AWS_BUILD is

               when "default" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;
      end case;
   end Compiler;

end Seminar;

