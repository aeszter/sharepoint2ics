with "/sw/cluster/florist17/share/gpr/florist.gpr";

project Seminar is

   for Object_Dir use "obj";
   for Exec_Dir use ".";
   for Main use ("seminar-main.adb");
   type Build_Kind is
      ("static", "relocatable", "static-pic");
   Xmlada_Build : Build_Kind := external ("XMLADA_BUILD");
   type Build_Kind1 is
      ("default", "relocatable");
   Aws_Build : Build_Kind1 := external ("AWS_BUILD");
   type Build_Kind2 is
      ("default");
   Florist_Build : Build_Kind2 := external ("FLORIST_BUILD");

   case Xmlada_Build is

      when "static" =>

         case Aws_Build is

            when "default" =>

               case Florist_Build is

                  when "default" =>
                     for Source_Dirs use ("src/**", "../tools/XMLAda/xmlada-3.2.1-src/**", "../tools/adacgi-1.6");
               end case;

            when "relocatable" =>
               for Source_Dirs use ("src");
         end case;

      when "relocatable" =>
         for Source_Dirs use ("src");

      when "static-pic" =>
         for Source_Dirs use ("src");
   end case;

   package Builder is
      for Executable ("seminar-main.adb") use "seminar";
   end Builder;

   package Compiler is

      case Xmlada_Build is

         when "static" =>

            case Aws_Build is

               when "default" =>
                  for Switches ("ada") use ("-gnatwa", "-gnatyylbyaAbBCehiklnoOpsStux3", "-gnatyyyy2", "-gnatyyyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;

         when "relocatable" =>

            case Aws_Build is

               when "default" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;

         when "static-pic" =>

            case Aws_Build is

               when "default" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");

               when "relocatable" =>
                  for Switches ("ada") use ("-gnatyyaAbBCehiklnoOpsStux3", "-gnatyy2", "-gnatyy1");
            end case;
      end case;
   end Compiler;

end Seminar;

